[tool.poetry]
name = "dsp"
version = "0.1.0"
description = "A series of notes on Digital Signal Processing topics"
authors = ["AGE90 <alejandrogomezechavarria@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://example.com"
repository = "https://example.com"
documentation = "https://example.com/docs"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT",
    "Operating System :: OS Independent",
]
packages = [{ include = "dsp", from = "src" }]

[tool.poetry.dependencies]
python = "3.11"
requests = "^2.32.4"
pydantic = "^2.11.7"
pyprojroot = "^0.3.0"
python-dotenv = "^1.1.1"
pywavelets = "^1.9.0"
openpyxl = "^3.1.5"
scipy = "^1.16.1"
seaborn = "^0.13.2"
ipykernel = "^6.30.0"

[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
mypy = "^1.17.1"
pre-commit = "^4.2.0"
ruff = "^0.12.7"

[tool.poetry.group.test.dependencies]
pytest = "^8.4.1"
pytest-cov = "^6.2.1"
pytest-mock = "^3.14.1"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
my-cli = "dsp.__main__:main"

# Configure pytest
[tool.pytest.ini_options]
addopts = "--cov=src"
testpaths = ["tests"]

# Configure mypy
[tool.mypy]
mypy_path = "src"
check_untyped_defs = true
disallow_any_generics = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
no_implicit_reexport = true

# Configure black
[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'

# Configure ruff
[tool.ruff]
line-length = 88
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []

[tool.ruff.isort]
known-first-party = ["dsp"]
